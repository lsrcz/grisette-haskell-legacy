name: grisette-cbmcencoding
version: 0.1.0.0
synopsis: Benchmark set for Grisette
description: Example symbolic DSLs for benchmarking purpose
category: Formal Methods, Theorem Provers, Symbolic Computation, SMT
author: "Sirui Lu"
maintainer: siruilu@uw.edu
license: BSD3
github: lsrcz/grisette-haskell
copyright: "2021 Sirui Lu"

dependencies:
- base > 4.14 && < 5
- grisette == 0.1.0.0
- grisette-monad-coroutine == 0.1.0.0
- mtl >= 2.2.2
- transformers >= 0.5.6.2
- monad-coroutine >= 0.9.0.4
- bytestring >= 0.10.12
- regex-base >= 0.94
- regex-pcre-builtin >= 0.95.1.1.8.44
- hashable >= 1.3
- template-haskell >= 2.16
- th-lift-instances >= 0.1.16
- unordered-containers >= 0.2.11
- megaparsec >= 8
- parser-combinators >= 1
- timeit >= 0.9
- clock >= 0.7.1
- formatting >= 6.3.1
- deepseq >= 1.4.4
- Unique >= 0.4.7
- bv-sized >= 1.0.3
- parameterized-utils >= 2.1.4
- either >= 5
- hashtables >= 1.2.3.4
- generic-deriving >= 1.14.1
- text >= 1.2.4.1
- th-compat >= 0.1.2
- natural-transformation >= 0.3
- QuickCheck >= 2.13.2

default-extensions:
- BangPatterns
- ConstraintKinds
- DataKinds
- DefaultSignatures
- DeriveAnyClass
- DeriveGeneric
- DeriveLift
- DerivingStrategies
- DerivingVia
- FlexibleContexts
- FlexibleInstances
- FunctionalDependencies
- GADTs
- KindSignatures
- LambdaCase
- MultiParamTypeClasses
- RankNTypes
- ScopedTypeVariables
- TupleSections
- TypeApplications
- TypeFamilies
- TypeOperators

flags: {
  fast: {
    description: "Compile with O2 optimization",
    manual: False,
    default: True,
  }
}

when:
  - condition: flag(fast)
    then:
      ghc-options: -O2
    else:
      ghc-options: -O0

ghc-options: -Wall -ferror-spans

library:
  source-dirs:
    - utils
    - bonsai-lib
    #- coroutine-lib
    #- regex-common

executables:
  # fluidics:
  #   source-dirs: fluidics
  #   main: Main.hs
  #   dependencies: grisette-cbmcencoding
  # ferrite:
  #   source-dirs: ferrite
  #   main: Main.hs
  #   dependencies: grisette-cbmcencoding
  bonsai-nanoscala-cbmc:
    source-dirs: bonsai-nanoscala-cbmc
    main: Main.hs
    dependencies: grisette-cbmcencoding
  bonsai-letpoly-cbmc:
    source-dirs: bonsai-letpoly-cbmc
    main: Main.hs
    dependencies: grisette-cbmcencoding
  bonsai-stlc-cbmc:
    source-dirs: bonsai-stlc-cbmc
    main: Main.hs
    dependencies: grisette-cbmcencoding
  bonsai-nanoscala-nomemo-cbmc:
    source-dirs: bonsai-nanoscala-nomemo-cbmc
    main: Main.hs
    dependencies: grisette-cbmcencoding
  bonsai-letpoly-nomemo-cbmc:
    source-dirs: bonsai-letpoly-nomemo-cbmc
    main: Main.hs
    dependencies: grisette-cbmcencoding
  bonsai-stlc-nomemo-cbmc:
    source-dirs: bonsai-stlc-nomemo-cbmc
    main: Main.hs
    dependencies: grisette-cbmcencoding
  # cosette:
  #   source-dirs: cosette
  #   main: Benchmark/Main.hs
  #   dependencies: grisette-cbmcencoding
  # cosette-optimized-merge:
  #   source-dirs: cosette-optimized-merge
  #   main: Benchmark/Main.hs
  #   dependencies: grisette-cbmcencoding
  ifcl-cbmc:
    source-dirs: ifcl-cbmc
    main: Main.hs
    dependencies: grisette-cbmcencoding
  # regex:
  #   source-dirs: regex
  #   main: Main.hs
  #   dependencies: grisette-cbmcencoding
  # regex-nomemo:
  #   source-dirs: regex-nomemo
  #   main: Main.hs
  #   dependencies: grisette-cbmcencoding
  # regex-delim:
  #   source-dirs: regex-delim
  #   main: Main.hs
  #   dependencies: grisette-cbmcencoding
  # regex-delim-nomemo:
  #   source-dirs: regex-delim-nomemo
  #   main: Main.hs
  #   dependencies: grisette-cbmcencoding
  # microsem:
  #   source-dirs: microsem
  #   main: Main.hs
  #   dependencies: grisette-cbmcencoding